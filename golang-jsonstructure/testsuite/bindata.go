// Code generated by go-bindata.
// sources:
// testsuite/structure/array.json
// testsuite/structure/compose.json
// testsuite/structure/embedded.json
// testsuite/structure/format.json
// testsuite/structure/general.json
// testsuite/structure/integer.json
// testsuite/structure/map.json
// testsuite/structure/set.json
// testsuite/structure/string.json
// testsuite/structure/struct.json
// testsuite/structure/union.json
// testsuite/value/alias.json
// testsuite/value/array.json
// testsuite/value/boolean.json
// testsuite/value/format/date-time.json
// testsuite/value/format/email.json
// testsuite/value/format/hostname.json
// testsuite/value/format/ipv4.json
// testsuite/value/format/ipv6.json
// testsuite/value/format/uri.json
// testsuite/value/integer.json
// testsuite/value/json.json
// testsuite/value/map.json
// testsuite/value/number.json
// testsuite/value/set.json
// testsuite/value/string.json
// testsuite/value/struct.json
// testsuite/value/union.json
// DO NOT EDIT!

package testsuite

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _testsuiteStructureArrayJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x93\x41\x6a\xc3\x30\x10\x45\xf7\x3a\xc5\x67\xd6\x29\x34\x5b\xdf\xa0\x67\x28\x5d\x4c\xe3\xb1\x3b\x60\x4b\x61\x34\x09\x0d\x25\x77\x2f\x71\x54\x13\x84\x53\x0a\x35\x59\x19\x7f\x46\x9f\xf7\x18\xe9\x35\x00\x5f\x01\x00\xa8\x95\xbc\x33\xdd\xbb\xa6\x48\x0d\x48\x5d\xc6\x0c\xcd\x18\x35\x67\x8d\x3d\x6d\xae\x63\xd9\xed\xb0\xf3\x83\x09\x35\xe5\x24\x40\x23\x6b\xbc\xf9\x07\xc8\x4f\xfb\xcb\x04\xb1\x19\x9f\xa8\xe4\xe7\xe9\x7b\x2e\x4d\x47\x1e\xb4\xa5\x06\x1d\x0f\x59\xc2\x25\x9f\x0a\x6a\x90\x51\xe3\xcb\x0f\x4b\x94\x9e\x5d\x8f\x32\xc1\x2c\xa0\xd4\x20\x15\xc6\x66\xe6\x2d\x9d\xd4\xe0\x69\x3b\xa7\x5a\xa2\x05\x8d\xf7\x94\x06\xe1\x58\x89\x84\x22\x53\xa9\xdc\x13\xe1\xcf\xf5\x45\x4a\xe7\x63\x45\x6e\x36\xd2\x9b\xb0\x8b\xc1\x3f\x38\x62\xa6\x59\x6f\x3d\xdb\x25\xd5\xe7\xd5\x4d\xef\xde\xbe\xeb\x33\xe8\x54\x86\x16\x62\x96\xec\xbf\x6e\xbf\x10\x77\x29\xfd\x71\x2f\xe1\xed\x3b\x00\x00\xff\xff\xae\x92\xfc\x02\xb9\x03\x00\x00")

func testsuiteStructureArrayJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureArrayJson,
		"testsuite/structure/array.json",
	)
}

func testsuiteStructureArrayJson() (*asset, error) {
	bytes, err := testsuiteStructureArrayJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/array.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureComposeJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x7c\xd0\xcd\x6a\x84\x30\x14\x05\xe0\x7d\x9e\xe2\x70\xd6\x2e\xba\x76\x57\xf0\x2d\xac\x8b\x18\xaf\x25\xa0\x89\xe4\x47\x28\xc5\x77\x2f\x52\x99\xd1\x30\xe3\x32\xf7\xe6\x3b\x1c\x6e\xab\x80\x5f\x05\x00\x1c\x24\x9a\x60\x97\x64\xbd\x63\x0d\x06\x31\x39\x44\xbb\x0a\x8c\x9f\x17\x1f\x85\xd5\xff\xbf\x98\x42\x36\x29\x07\x61\x7d\x50\x80\x63\xd0\xdf\xb3\xb8\x14\x4f\x43\x80\xfa\xf2\x04\xf8\x95\x3f\x3e\x9b\x86\x35\x5a\xb0\x27\xba\xc7\x6e\xab\x9e\xaa\xbf\x53\xfa\x9d\x32\xa5\x1a\x8a\x41\x11\x64\xce\x41\xc0\xf6\x32\x54\xee\xaa\xc8\xa5\x8a\x2a\x34\x67\x6d\xdd\xf5\x1c\xe9\x67\xd9\x03\xd9\x7b\x3f\x89\x76\x54\x67\x7a\x40\xae\x7a\xb2\x7b\xf5\x51\x4f\x51\xd4\xbe\xed\xfe\x02\x00\x00\xff\xff\xb3\x27\xd7\x12\xa6\x01\x00\x00")

func testsuiteStructureComposeJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureComposeJson,
		"testsuite/structure/compose.json",
	)
}

func testsuiteStructureComposeJson() (*asset, error) {
	bytes, err := testsuiteStructureComposeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/compose.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureEmbeddedJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\x4b\x6a\xc3\x30\x10\x86\xf7\x3e\xc5\xcf\xac\x4d\xb0\xdb\x9d\xaf\x12\xbc\x50\xec\x71\x23\x18\x49\x46\x8f\x84\x52\x72\xf7\x22\x55\x6d\x83\xdb\x52\x68\x0a\x59\x99\xf1\x3c\xbe\x4f\x23\xed\x1b\xe0\xa5\x01\x00\x9a\x39\x4c\x5e\xaf\x51\x3b\x4b\x43\x0e\x17\x95\x24\x42\x07\x9c\xbd\xb3\x4f\x88\xcf\x2b\x53\xfb\x56\x1b\xa2\x4f\x53\x4c\x9e\x69\xa8\xed\x00\x19\xa5\xed\x55\x0c\x50\x69\x19\x40\x36\x99\x03\xfb\xda\x5c\x61\x65\x7a\x4e\x1e\x59\xc4\xe1\xec\xbc\xcc\x54\x0b\x2e\xe5\x7b\xa9\xb0\x93\x12\x3d\xd3\x80\x45\x49\xe0\x26\xff\x2f\x8c\xad\x30\xdb\x64\x70\x54\x01\x73\x5a\x45\x4f\x2a\x32\x58\xd8\xb0\x8d\xa1\x90\xbf\x91\xde\x2a\xff\x24\x5c\x66\xd3\x80\x3d\xfa\xae\x45\xdf\xed\x3a\x8c\xcd\xbb\x68\xd1\xdc\x48\xde\x57\x71\x97\x25\xb9\xff\x9b\xe3\xd5\xbd\x5b\x17\xa1\x60\x38\x83\xe0\x16\x14\xc4\xff\x79\xb6\x78\x68\xf1\x88\xf1\x23\xf5\xf9\x28\xba\x9b\xb6\x6b\x93\x08\x4e\x4a\x12\xdf\x6c\x9b\x47\xa9\x83\xe4\x5c\xf4\x89\xbf\x9e\xa2\xb0\x7e\x59\x74\x33\xbe\x06\x00\x00\xff\xff\x5a\xdc\x0e\xf2\x67\x03\x00\x00")

func testsuiteStructureEmbeddedJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureEmbeddedJson,
		"testsuite/structure/embedded.json",
	)
}

func testsuiteStructureEmbeddedJson() (*asset, error) {
	bytes, err := testsuiteStructureEmbeddedJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/embedded.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureFormatJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8e\x4d\x8e\x83\x30\x0c\x85\xf7\x39\xc5\x93\xd7\x33\x17\xc8\x55\x46\xb3\x30\x24\xa0\xa8\xc1\x8e\x82\x29\xaa\x2a\xee\x5e\x01\x59\x74\xc1\xa2\xea\x2a\xb1\xdf\x8f\xbf\x3f\x07\x3c\x1d\x00\x50\x88\x73\x5f\x53\xb1\xa4\x42\x1e\xb4\xc8\x4d\x74\x15\x0c\x5a\x27\x36\xfa\x39\x4d\xb3\xd5\xa5\xb7\xa5\x46\xf2\x2d\x07\xd0\xc4\x49\xde\x66\x80\xec\x51\x76\xc7\x6e\x4f\x32\xb6\xf0\xa1\xb4\x3a\xbf\xff\xb4\xe3\x4a\x4d\xda\x8e\x77\x6b\x67\xee\x9c\x53\x20\x8f\x81\xf3\x1c\x5d\xdb\x5f\x73\x9e\x85\xe0\x52\x72\x8a\x01\xa6\x58\xab\xca\x88\x03\xe1\x3b\xea\x4e\x35\x47\x96\x6b\xec\xc0\x16\x7f\x2d\x4d\xf1\x43\x72\xf7\xff\x0a\x00\x00\xff\xff\x79\xc7\x50\x01\x64\x01\x00\x00")

func testsuiteStructureFormatJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureFormatJson,
		"testsuite/structure/format.json",
	)
}

func testsuiteStructureFormatJson() (*asset, error) {
	bytes, err := testsuiteStructureFormatJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/format.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureGeneralJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xd4\x54\x4b\x6e\xe3\x30\x0c\xdd\xfb\x14\x84\x36\xd9\xcc\x62\xd6\xbe\xc1\x00\x33\x98\x03\x14\x5d\xa8\x36\xed\x12\x95\x68\x55\x9f\x34\x41\x90\xbb\x17\x96\xed\x46\x76\xec\x7c\xd1\x00\x5d\x25\x79\x94\xf8\x3e\x64\xf4\x94\x01\xec\x32\x00\x00\x51\xa2\x2b\x2c\x19\x4f\x0d\x8b\x1c\x84\x26\xe7\x88\x6b\xd0\x92\x18\x4a\x2c\x94\xb4\x32\xd6\x7e\x75\xc7\x9d\xb7\xa1\xf0\xc1\xa2\xc8\x61\xb7\xef\xc1\xb5\x54\x54\x8a\x1c\x2a\xa9\x1c\x66\x00\x11\x3f\xdd\xdf\xe2\x7b\x20\x8b\x25\x18\xdb\x18\xb4\x7e\x0b\x2b\xbf\x35\xb8\x9a\xe5\x89\x10\x80\x68\x45\x45\xde\x08\xdc\xc0\xce\x41\x29\x68\x79\xce\x5a\x1b\x28\xdb\xc3\x2e\x01\x00\x84\x14\x39\xb4\x8d\x7a\xa4\x97\x91\xc8\xeb\x6e\xb5\x7c\x2f\x4d\xa3\x50\xb2\x80\x9b\x15\x07\x7e\xe3\xe6\x83\xa3\xe8\x8b\xb2\x39\x90\x57\x4d\x73\x07\x71\x19\x8c\xa2\x42\x7a\x04\x96\x1a\xdd\x49\xee\xca\xca\x5a\x23\xfb\x99\xa0\x96\xc3\x48\x93\x5b\x48\xf9\xb2\xcb\xdf\x11\xbb\xc5\xe0\x10\x8c\x25\x4d\x9e\xd6\xd8\xed\x4c\x1b\xc4\xb5\xcb\x42\xec\xb1\x46\xfb\x03\xcd\x2c\x0c\xf5\x91\x86\x16\x1d\x45\x07\xc5\xb6\x50\x57\xcf\x63\xba\x56\xe2\x20\x15\xda\x9f\xa3\xaa\x7c\xd4\x84\x88\xe3\xe1\xe1\x31\xa4\x33\xff\xb7\x41\xc2\x41\xf8\x54\x4a\xe2\x49\x07\xe5\xc9\x28\xfc\x5f\x89\x1c\x7e\xa7\x05\x62\xd2\x41\x4f\x50\xdc\x14\x2a\x38\x5a\xe3\xbf\xd9\xb2\x96\x9b\x93\x97\x66\xcb\x46\x7a\x8f\x96\x87\x47\x69\xac\xe1\x2f\x72\xed\x5f\x8f\x69\x66\xf1\x8a\x50\x95\xe3\x91\x42\xd7\x74\x0c\xcd\x44\x92\x54\xf7\x5f\xdf\xd3\xe1\x93\x47\x7d\xd4\x7a\xb1\xcb\x7e\xec\xe2\x4f\x7f\x79\x62\x62\x0e\x3e\xde\xca\xfb\x2c\x64\xe9\xe7\xe2\xf2\x65\xcf\x9f\x01\x00\x00\xff\xff\x4c\x18\x16\xeb\xf5\x07\x00\x00")

func testsuiteStructureGeneralJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureGeneralJson,
		"testsuite/structure/general.json",
	)
}

func testsuiteStructureGeneralJson() (*asset, error) {
	bytes, err := testsuiteStructureGeneralJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/general.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureIntegerJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x92\xcf\x6a\xc3\x30\x0c\xc6\xef\x7e\x8a\x0f\x9d\x37\x68\xaf\x7e\x87\xb1\x07\x18\x3b\x98\x46\xcd\x04\xb6\x17\xfc\x27\x74\x8c\xbe\xfb\x68\xe2\x66\x23\x75\x0b\x2b\xee\x29\x44\x96\x3e\xfd\x3e\x49\x6f\x0a\xf8\x56\x00\x40\x1d\xc7\x5d\x90\x21\xc9\xa7\x27\x0d\x72\xd9\x26\x19\x2c\xbf\xee\x21\x11\x9e\x7b\x93\x64\x64\x7a\x9a\x93\x63\x0a\x79\x97\x72\x60\xd2\xa5\x1e\x20\x67\xc4\xff\xf9\x07\x28\x7d\x0d\xa7\x0c\x12\x9f\xb8\xe7\x50\xaa\xe7\xe4\x45\x9f\x34\x9e\xb7\xe5\xe1\x38\x7d\x8f\xa5\xcb\x68\xac\x74\xa4\xb1\x37\x36\xb2\x3a\xc5\x27\xf1\x0b\x54\xf1\xe2\xb2\x83\xf1\x1d\xf8\xb0\xb3\x39\xca\xc8\x2f\x73\x70\x6a\x59\xc1\x5d\xc3\x5e\x45\x3d\xab\x93\xc6\x66\x89\x5d\x74\xd1\xd8\xa8\x33\xff\x44\xbf\x62\xbf\x46\x6e\x0e\x15\xf2\x39\xd8\x80\xbc\x08\xd5\xc9\x7f\x1f\xef\x22\x2f\x33\xef\x03\x9b\xc4\x01\xe9\xc3\x78\xb8\x66\xe4\xcb\x58\xb7\x35\x37\xf7\x00\xaf\x57\xf6\x20\xf2\xca\x65\x34\xb3\x50\x9d\xf9\x03\xce\xa6\x42\xde\xea\x6c\x6e\x6f\xa1\xbd\x97\x9b\xeb\xf8\xbf\x29\xf5\xfe\x13\x00\x00\xff\xff\xec\xf4\x0e\xcc\x31\x05\x00\x00")

func testsuiteStructureIntegerJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureIntegerJson,
		"testsuite/structure/integer.json",
	)
}

func testsuiteStructureIntegerJson() (*asset, error) {
	bytes, err := testsuiteStructureIntegerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/integer.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureMapJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x8a\x1f\x9d\x3b\x58\xaf\x79\x83\x3d\xc3\xd8\x41\x6b\x94\x4c\x10\xdb\xc1\x56\xcb\xc6\xe8\xbb\x8f\xa6\x5e\xe8\x4c\x32\x06\x0b\x3d\x19\xff\x48\xe2\xfb\x90\x9e\x1d\xf0\xe9\x00\x80\x5a\xc9\x87\xa4\xa3\x69\x0c\xd4\x80\xd4\xc4\x67\x68\x86\xd7\x9c\x35\xf4\xb4\xbb\x96\x65\x4b\xc7\x83\x1d\x93\x50\x53\x3a\x01\xf2\xac\xe1\xe6\x0f\x90\x7d\x8c\x97\x0a\xf2\x3c\x52\x49\xcf\xd3\x7b\x2e\x73\x4e\x3c\x68\x4b\x0d\x3a\x1e\xb2\xb8\x4b\x3e\xb5\xd7\x18\x5e\xc3\xd3\x37\x49\x90\x9e\x4d\x4f\x32\xa1\x2c\x80\xd4\x18\x3f\x20\x76\x33\x6b\x99\x48\x0d\x1e\xf6\x73\xaa\x25\x5a\x50\x78\x8d\x71\x10\x0e\x95\x86\x2b\x2a\x95\xc8\x9a\x06\xbf\x6f\xad\x51\x26\xde\x57\xe3\x66\x1b\x7d\x12\x36\x49\xb0\x37\x0e\x98\x69\xb6\x5a\xcd\x7e\x49\xf4\x71\x73\xcf\xd5\xbb\xbb\x9e\x7f\xa7\x32\xb4\x90\x94\x62\xfa\x9f\xd9\x2f\xbc\x5d\x8c\x7f\xdc\x89\x7b\xf9\x0a\x00\x00\xff\xff\x45\x87\x6c\x9d\xaf\x03\x00\x00")

func testsuiteStructureMapJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureMapJson,
		"testsuite/structure/map.json",
	)
}

func testsuiteStructureMapJson() (*asset, error) {
	bytes, err := testsuiteStructureMapJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/map.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureSetJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\x92\xc1\x6a\xc3\x30\x0c\x86\xef\x7e\x8a\x1f\x9d\x3b\x58\xaf\x79\x83\x3d\xc3\xd8\xc1\x6b\x94\x4c\x90\xd8\x45\x52\xcb\xc6\xe8\xbb\x8f\xa6\x5e\xe8\x4c\x3a\x06\x0b\x3d\x19\xff\x48\xe2\xfb\x90\x9e\x03\xf0\x19\x00\x80\x5a\xb6\x9d\xca\xde\x25\x27\x6a\x40\xe2\x3c\x1a\xc4\x30\x8a\x99\xa4\x9e\x36\x97\x32\x73\x3d\xec\xfc\xa0\x4c\x4d\xe9\x04\x68\x8c\x92\xae\xfe\x00\xf9\xc7\xfe\x5c\x41\xc6\x4e\x25\x3d\x4d\xef\xa9\xcc\x39\xc6\x41\x5a\x6a\xd0\xc5\xc1\x38\x9c\xf3\xa9\xbd\xc6\x18\x25\x3d\x7d\x93\x24\xee\xa3\xcb\x91\x27\x94\x05\x90\x1a\xe3\x07\xc4\x66\x66\x2d\x13\xa9\xc1\xc3\x76\x4e\xa5\x44\x0b\x0a\xaf\x39\x0f\x1c\x53\xa5\x11\x8a\x4a\x25\x72\x4b\x23\xbe\xaf\xad\x51\x26\xde\x57\xe3\x6a\x1b\xbd\x72\x74\x56\xf8\x5b\x4c\x98\x69\xd6\x5a\xcd\x76\x49\xf4\x71\x75\xcf\x9b\x77\x77\x39\xff\x4e\x78\x68\xc1\xaa\x59\xff\x67\xf6\x0b\x6f\x97\xf3\x1f\x77\x12\x5e\xbe\x02\x00\x00\xff\xff\xdc\x50\xd2\x78\xaf\x03\x00\x00")

func testsuiteStructureSetJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureSetJson,
		"testsuite/structure/set.json",
	)
}

func testsuiteStructureSetJson() (*asset, error) {
	bytes, err := testsuiteStructureSetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/set.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureStringJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xbc\xd0\xc1\x4a\xc3\x40\x10\x06\xe0\xfb\x3e\xc5\xcf\x9c\x2a\x55\xb1\xd7\x7d\x06\xdf\xc0\x7a\x58\x9a\x71\x3b\x90\x4e\xc3\xee\xa4\x54\x24\xef\x2e\x49\xb7\xa6\xd4\x06\xa1\x01\x4f\x21\xc3\x3f\xff\x7e\xcc\x9b\x03\xbe\x1c\x00\x50\xc5\x79\x93\xa4\x31\xd9\x2b\x79\xd0\x4e\xf4\x95\x35\xda\x16\x92\xa1\x1c\x83\xc9\x81\xe9\xf1\x94\xcd\x96\xda\x8d\xb5\x89\xc9\x97\x75\x80\x76\x41\xf4\xe2\x1f\x20\xfb\x6c\xfa\x44\x1f\x17\x8d\x65\xf9\x94\x3d\xb7\x93\xc7\xd3\xaa\xcc\xbb\xe1\xdb\x95\x37\x0e\xa1\x96\x8a\x3c\x3e\x42\x9d\xd9\xf5\xf3\xa1\xfa\x97\x33\x1c\x27\x9c\x37\x94\xd7\xc6\x29\xe1\xd8\x3a\xfa\x3a\x57\x6c\x57\xb2\x29\xd7\xcf\xfd\x62\xe2\x60\x9c\x60\xdb\xa0\x18\x8b\x67\x13\x2f\x4e\xb8\xba\x09\x7f\xb9\xc7\xad\xc3\x01\x91\x38\xb6\x75\x48\xe0\x63\x93\x38\x67\xd9\x2b\x9a\x60\xc6\x49\x67\xc3\xcf\x3d\x1e\xb4\x5e\x57\x4b\xba\x47\x29\x3a\xc4\xfe\x89\xb9\x58\x3c\x2f\x1f\xfe\x70\xba\xf7\xef\x00\x00\x00\xff\xff\x42\x2d\x52\x0a\x4c\x03\x00\x00")

func testsuiteStructureStringJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureStringJson,
		"testsuite/structure/string.json",
	)
}

func testsuiteStructureStringJson() (*asset, error) {
	bytes, err := testsuiteStructureStringJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/string.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureStructJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x6c\x8f\x4b\x0a\xc3\x30\x10\x43\xf7\x3e\x85\x98\x75\x4e\x90\xab\x94\x2e\x42\xe2\x94\x81\xc4\x0e\x33\x4e\xa1\x14\xdf\xbd\xf8\xd3\x12\x9b\xae\x8c\x35\x92\x78\xba\x19\xe0\x6d\x00\x80\x16\xab\xb3\xf0\x11\xd8\x3b\x1a\x41\x2b\xdb\x6d\x51\xb0\x62\x67\x55\x76\x0f\x1a\x8a\x4f\x83\x9c\x73\x38\xc5\xd2\x58\xa3\x00\xed\x13\xbb\xcb\x1f\xa0\xf0\x3a\x92\xa3\xda\xa9\x1e\x62\x7e\x63\xad\x7a\x4e\x1b\x2f\x34\x62\x9d\x36\xb5\x26\xe9\xb9\xa1\x47\x29\x15\xc8\x44\xb0\x22\x5e\x32\xcb\x1f\x92\x9e\xa3\xa7\x18\xbe\x7a\x59\xd7\x12\xaf\xde\x37\xc2\x25\x9e\x4e\x3f\x3d\xb6\x5b\x4c\xdd\xd3\xad\x89\xe6\xfe\x09\x00\x00\xff\xff\xba\x11\x32\x1d\x5d\x01\x00\x00")

func testsuiteStructureStructJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureStructJson,
		"testsuite/structure/struct.json",
	)
}

func testsuiteStructureStructJson() (*asset, error) {
	bytes, err := testsuiteStructureStructJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/struct.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteStructureUnionJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x90\x41\xca\x83\x30\x10\x85\xf7\x39\xc5\x63\xd6\x9e\xc0\xab\xfc\xfc\x0b\xd1\xb1\x0c\x68\x22\x33\xb1\x20\x25\x77\x2f\xd1\xd0\xaa\xd4\x45\xa1\xab\x90\x2f\xf3\x1e\x5f\xe6\xcf\x01\x0f\x07\x00\xd4\xb1\xb5\x2a\x53\x94\xe0\xa9\x06\xc5\x65\x62\x83\x18\x46\x31\x13\x7f\xa3\x6a\x1b\xb3\xa8\x73\x1b\x67\x65\xaa\x4b\x12\xa0\xb1\x11\xbf\xbb\x63\x8b\xe7\x9a\xd9\xe7\xbe\xc2\xd3\x7a\xa6\xd2\x74\x6f\x06\xe9\xa8\x46\xdf\x0c\xc6\x2e\xf3\xb5\xe0\x52\x84\xc7\x29\x2e\xab\xc6\x07\x89\xb3\xc2\x49\xa0\xda\x63\xcb\x73\xc5\xc5\x15\x9f\xef\x6c\x58\x35\xe8\xcf\x54\xde\x5b\xeb\x43\x38\x80\x5d\x38\x3f\xbd\x78\x3a\x2e\xf4\xe2\x13\xc9\xfd\x3f\x03\x00\x00\xff\xff\xd9\x69\xb6\x6a\xe0\x01\x00\x00")

func testsuiteStructureUnionJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteStructureUnionJson,
		"testsuite/structure/union.json",
	)
}

func testsuiteStructureUnionJson() (*asset, error) {
	bytes, err := testsuiteStructureUnionJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/structure/union.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueAliasJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x90\x41\x6a\xc3\x30\x10\x45\xf7\x3e\xc5\x47\x6b\x9f\xc0\x57\x09\x59\x4c\xe5\x09\x15\x4c\xa5\x20\x8d\x52\x4a\xc9\xdd\xcb\xc8\x0a\x55\xdd\x9a\x16\xba\xb2\x99\xff\xbe\x9e\x34\xa7\x09\x78\x9f\x00\xc0\xad\x5c\x7c\x0e\x57\x0d\x29\xba\x05\x4e\xdf\xae\x0c\x92\x40\x05\x2b\x7b\xa1\x4c\x2d\x99\x37\xb8\x68\xae\x5e\x6b\x66\xb7\xf4\x3e\xb6\x4a\x19\x06\x80\xbb\xa4\x64\x83\x2d\xb3\x63\x9f\x52\x12\xa6\xe8\x70\xef\xd0\x7d\x7e\xd4\x5f\x28\xc4\xaf\xb0\xb5\x3b\xd8\x31\x77\x23\x09\xab\x5b\xa0\xb9\x72\x1f\x29\x17\x35\xed\xa9\x1f\x34\xe8\x77\x6f\x0a\xd1\xa7\x9c\xd9\x2b\x9a\x61\x1e\x40\x52\x32\xe2\x99\x45\x12\x5e\x53\x96\x75\x8c\x1f\xd6\x0b\x49\xe1\xfd\xc5\x8f\x7d\xb1\x8a\xe0\x46\x52\x7f\x72\x59\xf8\x7f\x85\xed\xe1\x50\xf1\xb9\xa4\x6f\xbb\xfb\xbb\xa1\x5d\xe8\x50\xd1\xd2\x5f\x1c\xed\x7b\x9e\xec\xef\xfc\x11\x00\x00\xff\xff\xff\x95\x70\xaa\x71\x02\x00\x00")

func testsuiteValueAliasJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueAliasJson,
		"testsuite/value/alias.json",
	)
}

func testsuiteValueAliasJson() (*asset, error) {
	bytes, err := testsuiteValueAliasJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/alias.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueArrayJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\xc1\x6e\xc2\x30\x0c\x86\xef\x7d\x0a\x2b\xe7\x5e\xd8\x6e\xbc\xc1\x9e\x01\x71\xf0\x5a\x03\x91\xd2\x94\x39\x2e\x03\x4d\xbc\xfb\x94\x34\x74\xa1\x4d\x57\xa4\x6d\x9a\x84\x14\x81\xe3\x7c\xbf\xcd\xb7\x29\x00\x3e\x0a\x00\x00\x55\x93\xab\x58\x1f\x45\xb7\x56\xad\x41\x39\xe1\xae\x12\x90\xcb\x91\xa0\xa6\xca\x20\x63\x28\x95\xfd\xed\xbe\xdc\x31\xa9\x75\x7c\x00\x40\x35\xa8\x6d\xf2\x1d\x40\xf9\x76\xff\x1a\x32\xe3\x25\xf6\x86\x82\x16\x6a\xdc\xdd\xdd\xe4\xb6\xb6\x42\x7b\x62\x35\xd4\xae\x45\x7a\x5e\x63\x86\x13\x1a\x5d\xab\x35\x08\x77\x14\x7f\x12\x72\xe2\x9f\xdd\xc4\x86\x24\xca\x68\x3e\x6d\xab\x96\x99\xe2\x88\x69\xb4\x1a\x05\xfd\x8d\x03\x19\xd3\xc2\x7b\xcb\xa6\x4e\xcb\x37\xea\x0e\x8d\xa3\x5b\xae\x72\x91\x67\x3b\x63\xe0\x84\xa6\xcb\xb1\x7c\xf1\xe7\x88\xd0\x06\x93\x55\x47\xc6\x06\x56\xa5\xff\x3c\x95\xf0\xbc\xcd\xc0\xfc\x16\x1f\x67\x69\xdb\xd3\xc8\x50\x43\x56\xdc\x1c\x50\xed\xda\x56\x95\xa0\x5e\x91\x55\x19\xe6\xcc\xb1\xef\x06\x0d\xe7\xb6\xf0\x31\x42\x80\x31\xba\xd1\x56\x37\x5d\x03\xbd\x42\xfe\xb5\x8c\x8d\x63\x17\x67\x4c\xcc\x78\x38\x67\xe1\xb0\x14\x1f\xe0\x25\xb6\xad\x8a\x5b\xe4\x50\x9e\x28\x39\x12\x72\x48\x33\x1a\xc9\x90\x73\x20\x07\xb4\x30\x1d\xee\x7e\xa5\xc3\xf6\x32\xbb\x8b\x09\xe7\x20\xf4\xd6\xa1\x01\x69\x17\x19\xab\x0c\x65\xb0\x63\x01\xb2\x67\x42\x21\x7e\x6c\x18\x6f\xe3\xb7\xac\xc2\x8b\x30\xa7\x01\x9e\xff\x59\x03\x3c\xff\x9d\x06\x93\xe1\x96\x34\x78\xf4\x0f\xfa\xb2\x60\x01\xf1\x7b\x16\x2c\x81\xf2\x16\x24\x5e\xf7\x1a\x14\xdb\xcf\x00\x00\x00\xff\xff\x98\xa0\xeb\xec\xae\x06\x00\x00")

func testsuiteValueArrayJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueArrayJson,
		"testsuite/value/array.json",
	)
}

func testsuiteValueArrayJson() (*asset, error) {
	bytes, err := testsuiteValueArrayJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/array.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueBooleanJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xa4\x90\x41\x6a\x43\x31\x0c\x44\xf7\xff\x14\x83\xd6\x39\xc1\xbf\x4a\xc8\x42\xb5\x55\x6a\x50\xed\x20\xcb\x29\x25\xfc\xbb\x17\x3b\x0e\x0d\xa4\x21\x85\xac\x6c\x34\xa3\x79\x83\xf6\x0b\x70\x5e\x00\x80\xa2\xd4\x60\xe9\xe8\xa9\x64\x5a\x41\x6f\xa5\xa8\x70\x86\x7f\x1f\x05\x51\x82\xb2\xf1\xd0\x76\x17\x7b\x75\x6b\xc1\x9b\x09\xad\x33\x01\xa0\x4f\x4e\x7d\xf9\x0c\xea\x6b\x37\x31\x84\x6d\x78\xb6\xb9\x7d\x62\x4d\x91\x56\xb8\x35\x99\x23\x97\xea\x95\x56\xec\x67\xd8\x35\xf4\xbe\x5a\xca\xa1\x98\x49\xf0\x51\x6e\x16\xba\x18\xd9\xb9\x3b\x3e\x44\xb5\xe0\xab\x98\xc6\x5b\xf9\x4a\x7d\x67\xad\x32\xc7\xdb\xee\x29\x2f\x37\x55\x9c\x58\xdb\x5f\xac\x2e\xbe\x8e\xe8\x77\x78\x88\xf8\x3d\xd2\xdd\xed\xfe\x4f\x18\x85\x1e\x22\x86\xfa\x84\x31\xde\xc3\xd2\x7f\x87\x9f\x00\x00\x00\xff\xff\x1a\x81\x15\xf4\x38\x02\x00\x00")

func testsuiteValueBooleanJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueBooleanJson,
		"testsuite/value/boolean.json",
	)
}

func testsuiteValueBooleanJson() (*asset, error) {
	bytes, err := testsuiteValueBooleanJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/boolean.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueFormatDateTimeJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x8e\xcf\xca\xc3\x20\x10\xc4\xef\x79\x8a\x61\xaf\x9f\x01\xf3\x1d\x7d\x8e\xde\x42\x0e\x62\x4c\x11\xf2\x0f\xdd\x14\x4a\xc8\xbb\x17\xad\x6d\x85\x16\x4a\x41\x54\x76\x67\xe6\x37\x6d\x05\xec\x15\x00\x50\x6f\x83\xf1\x6e\x65\xb7\xcc\xa4\x40\xbd\x66\x5b\xb3\x9b\x2c\x86\xc5\x4f\x9a\x49\xdc\x65\x81\xfd\x66\x78\xf3\x96\x54\x76\x02\x34\x69\x17\x4d\x3b\x88\xaf\x6b\xdc\x44\x99\x9b\xcf\x24\x40\xd9\x5e\x46\x12\x8e\xe4\x3c\x72\xe6\x45\x8f\xae\x27\x05\xf6\x9b\xcd\x23\xb6\x81\x03\x29\xb4\x19\xf1\x40\xbd\x17\x35\x8b\xf7\xd6\x30\x5e\xe9\xa2\xd0\x6a\xd6\x51\xf4\x2f\xa5\xac\x65\x53\xcb\xe6\x24\xa5\x4a\xe7\x2f\xdd\xa5\xb8\xac\x91\xa7\x87\xf8\xca\x77\xf3\x8f\x0d\x3e\x21\x07\x3d\x86\x27\x33\xbd\x5d\x15\x7f\xdd\x2d\x00\x00\xff\xff\x3d\x8b\x92\x0f\xa1\x01\x00\x00")

func testsuiteValueFormatDateTimeJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueFormatDateTimeJson,
		"testsuite/value/format/date-time.json",
	)
}

func testsuiteValueFormatDateTimeJson() (*asset, error) {
	bytes, err := testsuiteValueFormatDateTimeJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/format/date-time.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueFormatEmailJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x94\x8e\x41\x6a\x04\x21\x10\x45\xf7\x7d\x8a\x4f\xad\x25\x07\x70\x35\xf7\x18\x66\x51\x38\x35\x41\xd0\xb6\x29\xcb\x90\x30\xf4\xdd\x83\xdd\x76\x68\x08\x21\xcc\x4a\xf9\xbe\xff\x9f\xd7\x09\x78\x4e\x00\x40\x77\xa9\x41\xe3\x62\xb1\xcc\xe4\x41\x92\x39\x26\x3c\x8a\x66\x36\x72\x3b\x52\x4d\x5b\xb0\xa6\x42\x7e\xb4\x00\xca\x1c\x7b\xe1\x09\xb2\xaf\xa5\xbf\x74\x2c\xce\xef\xe4\x40\xa3\x7e\xcc\x11\xd6\xad\xb5\x8e\xbd\x0f\x4e\xf1\x4e\x1e\xa6\x4d\x46\x64\x52\xad\x92\xc7\x75\xcc\x1f\x9a\xdf\x1f\x0c\x45\x55\x82\x61\x5f\x76\x27\x8e\x8d\x3b\xd0\xaa\xe8\x45\x3e\x39\x2f\x49\xde\x42\xc9\x67\xe6\x6c\x1e\xe9\xea\xfe\x55\xc6\xf9\x25\xe9\xe5\x0f\xe9\x83\x53\xfd\xb1\x6e\xe7\x6d\xea\xb7\xdb\x77\x00\x00\x00\xff\xff\x8c\xc3\x69\x07\x8e\x01\x00\x00")

func testsuiteValueFormatEmailJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueFormatEmailJson,
		"testsuite/value/format/email.json",
	)
}

func testsuiteValueFormatEmailJson() (*asset, error) {
	bytes, err := testsuiteValueFormatEmailJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/format/email.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueFormatHostnameJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xe4\x92\x4d\x6a\xc3\x30\x10\x85\xf7\x39\xc5\x54\x6b\x93\x03\xf8\x2a\x21\x8b\xb1\x3c\xb2\x15\xf4\xe3\x8e\x46\x41\x56\xc8\xdd\x8b\x53\xb7\xb8\x34\x4d\x29\x64\xd7\x95\xc4\xe8\xbd\xf7\x3d\x06\x1d\x76\x00\x97\x1d\x00\x80\xea\x29\x69\xb6\x93\xd8\x18\x54\x0b\x6a\x8c\x49\x02\x7a\x02\x13\xd9\xa3\xa8\xe6\x5d\x95\x84\xb3\x96\xcc\xa4\xda\xd5\x08\xa0\x3c\xda\xc5\x73\x01\x25\xf3\xb4\xbc\x2c\x32\x1b\x06\xd5\x80\x5a\xed\x9b\x44\x05\xd7\x9b\xf1\xba\x46\x9e\xd1\xd9\x5e\xb5\x20\x9c\x69\x1d\x09\x25\x49\xaa\x85\xc3\x4a\xf8\x20\x7d\xaf\xa9\x23\x33\x69\x81\xcf\xf0\x66\x23\x45\xc1\x5b\x19\xe2\x33\xf1\x9e\x0a\xfa\xc9\xd1\x5e\x47\xbf\x55\x6d\xf1\xeb\xf4\xda\xfc\xca\x25\x3f\xc9\xfc\x90\x7a\x8f\x61\xd0\xa5\x3f\x40\x3a\xec\x41\x8f\xc8\xa8\x85\xf8\x1e\xe3\xe5\x09\x10\x17\xc3\x00\x89\x06\x4f\x41\xee\x31\xfa\xd0\xf9\x8a\xd9\x38\x3b\x8e\xa3\x0d\x95\x0b\x1a\xac\x52\x0b\x4b\xa9\x03\xf5\x38\x3b\xe7\x78\x90\x39\x9b\x64\xb5\x74\x93\x36\x25\xc4\x74\xd2\x35\xba\x10\xb0\x3c\xab\xe2\xa3\x5d\x53\x36\x12\xa5\x16\x7f\x4a\x7d\xd7\x49\xff\x3a\xcf\xe3\xc9\x75\x68\xbc\x09\x5c\x5c\xde\xff\x13\xc1\x0f\x5f\xfb\xcb\xba\x6f\xe7\x71\xb7\xdc\x8e\x6f\x01\x00\x00\xff\xff\x9a\x94\xc3\x42\xff\x03\x00\x00")

func testsuiteValueFormatHostnameJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueFormatHostnameJson,
		"testsuite/value/format/hostname.json",
	)
}

func testsuiteValueFormatHostnameJson() (*asset, error) {
	bytes, err := testsuiteValueFormatHostnameJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/format/hostname.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueFormatIpv4Json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xac\x8f\x4d\x6a\xc3\x30\x10\x85\xf7\x3e\xc5\xeb\xac\x8d\x99\x58\x2d\x31\x73\x95\x90\x85\x2a\x2b\x45\x90\xd8\x46\x1a\x07\x4a\xf0\xdd\x8b\x1c\x15\x12\x1a\xf0\xa6\x1b\x49\xcc\xfb\xf9\x46\x87\x0a\xb8\x55\x00\x40\xbd\x4f\x2e\x86\x49\xc3\x38\x90\x80\xc2\x74\x7d\xc7\x69\x8c\x17\xab\x54\xdf\x1d\x49\xe3\xec\x74\x8e\x9e\xa4\x84\x00\xba\xd8\x90\xfd\x37\x90\x7e\x4f\x59\xc9\xb6\x30\x7c\x51\x0d\x2a\xf1\xd2\x46\x58\xd6\xd0\x52\xea\xae\xf6\x1c\x7a\x12\x68\x9c\x7d\x19\xa9\x4f\x9a\x48\x70\x28\xed\xbf\x94\xbf\xeb\xb9\x31\x46\xef\x14\x6b\x71\xfd\x60\xb3\x6a\xb3\xbe\x6b\xda\xc6\x34\x4f\xd2\x23\xaf\x4c\x97\x7a\x13\x14\x86\x2d\xd4\xdb\x2b\xc8\xc9\x9e\xd3\xbf\x52\x5a\xe6\x9d\x70\xff\xd9\x49\xf7\x61\x8d\x30\x33\xdf\x8f\xce\xb6\x5e\xd8\xec\x59\xf6\xc6\xbc\xfc\xf0\xd3\x2e\xeb\x7d\xac\xf2\xeb\xf8\x13\x00\x00\xff\xff\xbb\xd1\x32\x0b\xfe\x01\x00\x00")

func testsuiteValueFormatIpv4JsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueFormatIpv4Json,
		"testsuite/value/format/ipv4.json",
	)
}

func testsuiteValueFormatIpv4Json() (*asset, error) {
	bytes, err := testsuiteValueFormatIpv4JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/format/ipv4.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueFormatIpv6Json = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x9c\x8f\x4d\x6a\xc3\x30\x10\x85\xf7\x3e\xc5\xeb\xac\x8d\x99\x58\x69\x63\xe6\x2a\x21\x0b\xd5\x56\x8a\x20\xb1\x8d\x34\x0e\x94\xe0\xbb\x17\x39\x2a\x18\x6a\x30\x74\x23\x89\x99\xf7\xf3\xe9\x5c\x00\xcf\x02\x00\xa8\x73\xb1\x0d\x7e\x54\x3f\xf4\x24\x20\x3f\x3e\x3e\x70\x1d\xc2\xdd\x2a\x95\x2f\x45\xd4\x30\xb5\x3a\x05\x47\x92\x4d\x00\xdd\xad\x4f\xfa\x27\x48\xbf\xc7\xb4\x49\x32\xdf\x7f\x51\x09\xca\xf6\x9c\x46\x98\x17\xd3\x9c\xe3\x1e\xf6\xe6\x3b\x12\x68\x98\x5c\x1e\xa9\x8b\x1a\x49\x70\xce\xe9\xbf\x2d\x7f\xf1\xda\x21\x04\xd7\x2a\x96\xe0\x72\x25\xb3\x6a\xd3\xbe\x66\x3e\x08\x77\x9f\x8d\x34\xef\xd6\x08\x33\xf3\xeb\x68\x6c\xed\x84\xcd\x89\xe5\x64\xcc\x71\x6d\x5d\xf3\xe4\xe9\x5c\xee\x82\xf8\x7e\x85\x72\xdc\x42\x39\x54\x75\x65\xaa\xcd\xaa\xab\xbd\xc5\xff\x76\x6d\x7e\xfb\x6d\xb7\x65\xb9\x2f\x45\x7a\x5d\x7e\x02\x00\x00\xff\xff\x01\x30\x39\xd1\xfe\x01\x00\x00")

func testsuiteValueFormatIpv6JsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueFormatIpv6Json,
		"testsuite/value/format/ipv6.json",
	)
}

func testsuiteValueFormatIpv6Json() (*asset, error) {
	bytes, err := testsuiteValueFormatIpv6JsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/format/ipv6.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueFormatUriJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8e\xc1\x6a\x03\x21\x10\x86\xef\xfb\x14\x3f\x73\x96\x78\xf7\x55\x42\x0e\x53\xe3\xb6\xc2\xba\xca\x38\x76\x5b\xc2\xbe\x7b\x31\xb1\x65\xa1\x81\x9c\x94\x99\xef\xff\xbf\x39\x4f\xc0\x6d\x02\x00\xba\x86\xea\x25\x16\x8d\x79\x25\x07\x6a\x12\x31\x67\x49\xac\x64\x1e\x40\x55\x69\x5e\x9b\x04\x72\x23\x03\x50\xe2\xd8\xf1\x1b\x48\xbf\x4b\xdf\x74\x2c\xae\xef\x64\x40\x23\xfe\x28\x23\xec\xf7\xcc\x3e\xda\x3e\x79\x89\x57\x72\x50\x69\x61\x8c\x34\x54\xad\xe4\x70\x1e\xe5\xbf\x92\xff\xc7\xf9\x2c\x12\xbc\xa2\xf7\x9a\x03\xc5\xca\x7d\xfd\xa1\x5a\x9c\xb5\xdb\xb6\x9d\xc2\x17\xa7\xb2\x84\x93\xcf\xe9\x48\x1e\xed\x63\xba\x9b\x97\xda\xb8\xbe\x10\x3b\x6b\xe7\x9c\xdf\x58\x9e\xb9\x66\x5e\xea\x9f\xec\xfe\x5e\xa6\xfe\xbb\xfc\x04\x00\x00\xff\xff\x34\x16\xdc\xe0\x85\x01\x00\x00")

func testsuiteValueFormatUriJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueFormatUriJson,
		"testsuite/value/format/uri.json",
	)
}

func testsuiteValueFormatUriJson() (*asset, error) {
	bytes, err := testsuiteValueFormatUriJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/format/uri.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueIntegerJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x96\xc1\x8e\xc2\x20\x10\x86\xef\x7d\x8a\x09\x67\x77\xa3\x6e\xf6\xd2\x77\xd8\xec\x03\x18\x0f\x6c\x3b\x2a\x09\x05\x17\x86\xea\xc6\xf8\xee\x9b\xb6\x54\x6b\x44\xa5\x69\x7b\x32\x29\x30\xdf\xc0\x37\x7f\xe2\x2a\x01\x38\x25\x00\x00\x2c\x47\x9b\x19\xb1\x27\xa1\x15\x4b\x81\x09\x45\xb8\x45\x03\xf4\xb7\x47\xc8\x31\x93\xdc\xf0\x7a\x6d\xd6\x6c\xb7\x64\x5c\x46\xce\x20\x4b\x7d\x05\x00\x56\x70\x51\x1d\x3e\x01\xab\x8e\x75\xca\x30\x38\xd7\x7b\xce\xfe\x74\xc9\xa5\xc8\x59\x0a\x64\x1c\xfa\x4f\x84\x96\x2c\x4b\x61\xe5\x8b\xb5\x45\x43\xad\x65\xda\x18\xcc\xa8\x6e\xce\x37\xd4\x6c\xe4\xc4\xab\x1d\x3b\x94\x52\xc3\x41\x1b\x99\x77\x97\x5b\xea\x86\x4b\x8b\xfe\xf3\x79\xf6\x92\xa7\x9c\x94\x50\x72\xe9\x42\xac\x6a\x71\x38\xa2\x7d\xed\x47\x94\xc5\xfb\x3c\x00\xa9\x5e\x2f\x9e\xd1\xf8\xe3\x12\x94\x2b\x7e\xd0\x04\x29\x9f\xaf\xae\x52\xff\xae\x13\x0f\x0c\x8f\x4e\x21\x94\x28\x5c\x71\x73\x99\xbe\xf3\x32\xbb\x94\x61\x29\xcc\xc7\x9c\x1e\x89\xd6\x02\xed\xb8\x82\x16\x70\xff\x10\x6f\x8b\xe1\x4a\xf1\xd7\x71\x09\xa4\x9f\x60\x86\x3b\xdd\x1a\xe4\x54\xa5\xf4\xf9\x7d\x42\xd7\xe9\x82\x62\xac\xe2\x31\x93\xce\x8a\x12\x61\x24\xbf\x97\x82\x5f\x53\x8b\xbe\x6b\x7d\x6a\xe5\x31\xc0\x90\xfc\x9e\xbc\x1b\xfb\x31\xcc\x31\xe6\xa0\xe0\xc7\x51\xd2\xdd\x94\x99\x30\xdd\x1e\x10\xa9\xba\x5f\xee\xae\xe1\x7e\x48\x19\x3b\xdc\x0f\x41\x2f\x07\xb7\x67\xba\xc7\xf1\x7b\x4d\xf7\xd4\xa2\xef\x5a\x9f\x58\x79\x0c\x6f\xc2\x70\x4f\x3b\x07\x85\x93\x24\xf6\x12\x41\x6f\x06\x64\xdb\x17\xf9\xde\xb0\x14\x96\x63\x5a\xc7\x12\x95\xff\xff\x02\xc2\x42\xa7\x5b\xa0\x83\x0e\x3c\xca\x72\xb0\x77\x9d\xe7\x1d\xa2\xd2\x14\x41\xfd\x88\x57\x91\xac\xff\x03\x00\x00\xff\xff\x89\x70\x69\x80\x84\x0b\x00\x00")

func testsuiteValueIntegerJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueIntegerJson,
		"testsuite/value/integer.json",
	)
}

func testsuiteValueIntegerJson() (*asset, error) {
	bytes, err := testsuiteValueIntegerJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/integer.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueJsonJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\x84\x8e\x4f\x6a\xc6\x20\x10\xc5\xf7\x39\xc5\x63\xd6\xdf\x09\xbc\x4a\xc8\x62\x88\x96\x5a\xa6\x1a\x74\x4c\x09\x21\x77\x2f\x1a\x53\x02\x0d\x7c\x2b\x65\xde\x9f\xdf\x1b\x07\x60\x1f\x00\x80\xac\xcb\x73\xf2\x8b\xfa\x18\xc8\x80\xbe\x72\x0c\xd0\x6d\x71\xb0\x6e\x16\x4e\xdc\x84\xd7\xe9\xcd\x9a\xca\xac\x25\x39\x32\x3d\x0e\xd0\x37\xfb\x9a\xdc\x41\x35\x76\x75\x10\x8e\x66\x38\x7a\x74\x65\xf1\x96\x0c\x34\x15\xd7\x4f\xea\xb2\x66\x32\x18\x7b\xd3\xd5\xf8\x7f\x14\x87\xad\x6d\xea\x3b\x4e\x0b\x2b\x57\xed\xd3\x89\x44\xfc\xc4\x24\xf6\x2e\xdf\x79\xfd\x7a\xbc\xde\x82\x42\x11\xc1\xca\x52\x9e\x50\x55\x7c\x20\x7c\xb0\xe4\x3f\x44\x7b\xa7\xa1\xfe\xa6\xdf\x00\x00\x00\xff\xff\xd0\x5d\x92\x0a\x65\x01\x00\x00")

func testsuiteValueJsonJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueJsonJson,
		"testsuite/value/json.json",
	)
}

func testsuiteValueJsonJson() (*asset, error) {
	bytes, err := testsuiteValueJsonJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/json.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueMapJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\xc1\x8e\xe2\x30\x0c\x86\xef\x7d\x0a\x2b\xe7\x5e\x60\x6f\x7d\x83\x7d\x06\xc4\xc1\xb4\x06\x22\xa5\x29\x9b\x38\x2c\xab\x15\xef\x3e\x4a\x1b\x4a\x92\x96\x82\x98\x19\xcd\xa9\xaa\x9d\xfc\xff\x6f\xe7\xdb\x14\x00\xff\x0b\x00\x00\xd1\x90\xad\x8d\x3c\xb1\xec\xb4\xa8\x40\x58\x36\xae\x66\xe0\x7f\x27\x82\x86\x6a\x85\x06\xfb\x56\x39\x9c\x1e\xda\xce\x90\xa8\x82\x00\x80\x68\x51\xea\xe8\x1f\x40\xf8\xeb\x5e\xad\xc5\x53\xb8\xd9\x97\x25\x53\x6b\x93\x93\xd1\x59\xa9\x99\x0e\x64\xc4\xd8\xbb\x16\xf1\xf7\x1a\x12\x9c\x51\xc9\x46\x54\xc0\xc6\x51\x28\x31\x59\xf6\xb2\x9b\x70\x21\x0a\x92\x4d\x27\x75\xdd\x19\x43\x61\xc0\x38\x5a\x83\x8c\xfe\xc4\x91\x94\xea\xe0\x6f\x67\x54\x13\xb7\x6f\xae\x7b\x54\x96\x6e\xb9\xca\x05\x27\xed\x94\x82\x33\x2a\x37\xe7\xe2\x9b\x9f\x11\xef\x2f\x40\xb6\xdc\xa0\x9d\xec\xd6\x17\x56\x65\x5c\xd9\x89\x0a\xd6\x49\xa5\x16\x15\xfc\xba\x2f\x7d\x26\x97\x5f\xf5\x2b\xb1\xa4\x1e\x82\x91\xa2\x96\x34\xdb\xf7\xd2\x89\x7d\xd7\x89\x49\x42\xb1\x43\x93\x56\x9b\xb0\xc8\xc5\xe8\xc9\x4a\xfb\xef\xb6\x18\xa7\xc8\xf3\xb7\x52\xcb\xd6\xb5\x30\x60\xea\xd5\x66\x78\xcf\x69\x9f\x65\x7d\x86\xf4\x47\x9c\x8f\xa9\xbd\xfd\xef\x70\x6d\x55\xdc\x02\xf7\xed\x09\xf4\x19\xf2\x63\x96\x6c\x20\x45\xd6\x02\x1f\x51\xc3\x74\xb4\xe4\x55\xee\x21\xa6\x8b\x8b\x9e\x3c\xd7\xa7\x3f\x0e\x15\x70\xf7\x4c\x7e\x78\xe9\xa9\xc9\x08\xd6\x82\xc7\xc1\x10\x32\x99\x97\xc6\xf0\x3e\xab\xb2\xc7\x68\xbd\xe4\x56\x78\x0c\x1e\x41\x80\x97\x1f\x85\x00\x2f\xdf\x07\xc1\x64\xb4\x64\x7b\xf0\xde\x03\xdd\x21\x58\x96\xff\x3a\x08\x9e\xfb\x3c\x86\x20\xe2\x7a\xa0\xa0\xd8\x7e\x04\x00\x00\xff\xff\xb0\xf7\xd0\x2c\x0d\x07\x00\x00")

func testsuiteValueMapJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueMapJson,
		"testsuite/value/map.json",
	)
}

func testsuiteValueMapJson() (*asset, error) {
	bytes, err := testsuiteValueMapJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/map.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueNumberJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x96\x4d\x6e\xc2\x30\x10\x46\xf7\x39\xc5\xc8\x6b\x5a\x01\x55\x37\xb9\x43\xd5\x03\x20\x16\x6e\x32\x14\x4b\x13\x9b\xda\xe3\x40\x85\xb8\x7b\x95\xc4\xe1\x47\x09\x24\x29\xc9\x0a\x29\xb6\xe7\x8d\xe7\xf9\x93\x58\x45\x00\xc7\x08\x00\x40\xa4\xe8\x12\xab\x76\xac\x8c\x16\x31\x08\xed\xb3\x2f\xb4\xc0\xbf\x3b\x84\x14\x13\x92\x56\x96\x4b\xb3\x6a\xb7\x63\xeb\x13\xf6\x16\x45\x1c\x0a\x00\x88\x4c\xaa\xe2\xec\x11\x44\x71\xec\x52\x45\xc0\xa9\xdc\x72\x0a\x87\x73\x49\x2a\x15\x31\xb0\xf5\x18\x3e\x31\x3a\x76\x22\x86\x55\xa8\x55\xd7\x6c\x36\xa6\x74\x62\xac\xc5\x84\xcb\xde\x42\x3f\xd5\x46\xc9\xb2\xd8\xb1\x45\x22\x03\x7b\x63\x29\xbd\x5e\xae\xa9\x1b\x49\x0e\xc3\xe7\xd3\xac\x93\xa7\x3d\x11\xe4\x92\x7c\x1b\xab\x58\x7c\x1e\x51\x8d\x56\x12\x84\x71\x35\x39\x8b\xd7\xf7\x16\x4c\x31\xbf\x9a\x52\xfe\xae\xa3\xc0\x6b\x77\x9a\x29\xad\x32\x9f\xdd\xdc\x66\xa0\xc9\xd9\xb9\x8a\x88\x61\x3e\xa6\x57\x42\xe7\x80\xb7\x52\x43\x0d\x68\x8e\xe1\x65\xf1\xfc\xb0\xf1\xc7\x4b\x02\x36\x0f\x30\xf3\x8e\x59\x77\x43\xbe\x2d\x4a\x2e\xe2\xf3\xf8\x3e\x6d\xd7\x19\x2a\x15\x0f\x09\x79\xa7\x72\x84\x71\xf4\x9e\xeb\x7d\x4c\xed\xb9\xd1\xf9\xd4\xc6\xfb\x00\xdb\xdc\x0f\xe4\xdd\xc8\xef\xc3\x1c\xe3\x19\x64\xf2\x30\x46\xb6\xab\x2a\x13\x66\x3b\x00\x7a\x9a\x1e\x96\xba\x4b\xb4\xef\x52\xc6\x8e\xf6\x5d\x50\xe7\xbb\x1d\x98\xed\x51\xf4\x5e\xb2\x3d\xb5\xe7\x46\xe7\x13\x1b\xef\xc3\x9b\x30\xda\xd3\x3e\x83\xcc\x13\xab\x1d\x21\x98\xcd\xff\x93\x1d\x6a\x7c\x6e\x44\x0c\xcb\x31\xa5\x63\x8e\x3a\xfc\x73\x01\xe5\xe0\xaa\x59\xe0\xbd\x69\x99\xc9\xf2\x69\xed\x26\x4d\xaf\x88\xda\x70\x0f\xea\x5b\x7f\x13\xd1\xfa\x2f\x00\x00\xff\xff\x92\x1f\x3f\x7f\x18\x0b\x00\x00")

func testsuiteValueNumberJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueNumberJson,
		"testsuite/value/number.json",
	)
}

func testsuiteValueNumberJson() (*asset, error) {
	bytes, err := testsuiteValueNumberJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/number.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueSetJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xc4\x92\xc1\x6e\xe2\x30\x10\x86\xef\x79\x8a\x91\xcf\xb9\xb0\x7b\xe3\x0d\xf6\x19\x10\x87\xd9\x64\x00\x4b\x8e\xcd\xda\x63\x96\xaa\xe2\xdd\x2b\x3b\x26\x35\xc1\xc1\x54\x6d\xd5\x53\x94\x8c\xc7\xdf\xfc\x93\x6f\xd3\x00\xbc\x36\x00\x00\xa2\x27\xd7\x59\x79\x64\x69\xb4\x58\x83\x70\x6c\x7d\xc7\xc0\x2f\x47\x82\x9e\x3a\x85\x16\x63\xa9\x1d\x4f\x8f\x65\x6f\x49\xac\xd3\x05\x00\x62\x40\xa9\xb3\x77\x00\x11\xda\xe3\x6d\xc4\xa9\x33\x7e\x96\x4c\x83\xbb\x39\x99\x9d\x95\x9a\x69\x4f\x56\x4c\xb5\x4b\x93\x3f\x2f\x69\x82\x13\x2a\xd9\x8b\x35\xb0\xf5\x94\x3e\x31\x39\x0e\xd7\x6e\x52\x43\x36\xc8\x2c\x9d\xd4\x9d\xb1\x96\x52\xc0\x7c\xb4\x1e\x19\xc3\x89\x03\x29\x65\xe0\xbf\xb1\xaa\xcf\xcb\x57\xea\x0e\x95\xa3\xeb\x5c\x6d\x95\xa7\xbd\x52\x70\x42\xe5\x4b\xac\x50\xfc\x3c\x22\xb6\xc1\x6c\xd1\x89\xb0\x81\x55\x0b\xbf\x5a\xf8\xbd\x2d\x70\xc2\x02\x9f\xc7\xf4\xfe\xa8\x64\x87\x4c\x30\xfe\xc4\x05\xd8\x03\xde\x07\x73\x49\x3d\x26\x23\x45\x03\x69\x5e\x24\x8a\x9d\x31\xa2\x05\xf1\x17\xad\x68\xe3\x4e\xab\xf0\xf8\xdc\x36\x61\x8c\x38\xc0\x1c\x3d\x48\x2d\x07\x3f\x64\x49\x0b\xde\xcf\xad\x2f\x3a\x5f\x30\x7e\xc9\xf7\x69\x25\x01\xff\x27\xb5\xad\x9a\xeb\xc0\xb1\x7c\x27\xff\x4c\xfd\x69\x96\x59\x20\x45\xce\x01\x1f\x50\xc3\x7d\xb4\xdb\x85\x4e\xbb\x2b\x6c\x2e\x4d\xb8\x04\xa1\x7f\x1e\x15\xb0\xa9\x32\x56\x05\xca\x24\x63\x05\xb2\xb7\x84\x4c\xf6\xb9\x30\x41\xc6\x87\xac\x26\x68\xb0\x24\x01\x9e\x7f\x54\x02\x3c\x7f\x9f\x04\x77\xd1\x6a\x12\x3c\xfb\x7b\xde\x1d\xa8\x20\xbe\xce\x81\x1a\xa8\xec\x40\x66\xf5\x28\x41\xb3\x7d\x0b\x00\x00\xff\xff\xb3\x33\x2f\x7b\x14\x07\x00\x00")

func testsuiteValueSetJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueSetJson,
		"testsuite/value/set.json",
	)
}

func testsuiteValueSetJson() (*asset, error) {
	bytes, err := testsuiteValueSetJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/set.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueStringJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x93\xd1\x6e\x82\x30\x14\x86\xef\x79\x8a\x93\xde\xce\x25\xdb\x9c\x17\xe3\x19\xf6\x06\xc6\x8b\x13\x38\x6a\x93\xd2\xb2\xf6\xe0\x34\x8b\xef\xbe\x80\x05\xb1\x54\x30\xd3\x5d\x11\x7a\xda\xff\xff\xfb\x7f\xb0\x4c\x00\x7e\x12\x00\x00\x91\x93\xcb\xac\x2c\x59\x1a\x2d\x52\x10\x8e\xad\xd4\x1b\xe0\x43\x49\x90\x53\xa6\xd0\x62\x33\x9a\x9d\x76\x3b\xb6\x55\xc6\x95\x25\x91\x7a\x01\x00\x51\xa0\xd4\xbd\x77\x00\x51\x1f\x3f\xab\x09\x3f\x38\x36\xcf\xa3\x97\xda\xa1\x92\xb9\x48\x81\x6d\x45\x7e\x89\xc9\xb1\x13\x29\x2c\xfd\x81\x9e\x62\x10\x53\xea\xcc\x58\x4b\x19\x37\x49\x7d\xba\xd3\x46\x64\x14\x29\x2c\x7a\x4b\xad\xd3\x1a\x95\xa3\x36\xcb\x6c\x44\x5d\x57\x4a\xc1\x0e\x55\x15\x53\xae\x87\xf7\x88\xfb\x86\xaf\xc9\x8b\x2d\x29\x65\xe0\xdb\x58\x95\x8b\x88\x4f\x5d\xd7\x45\x9f\xab\xa4\x33\x0c\xad\x0a\xa9\x65\x51\x15\xa0\x48\x6f\x78\xdb\xa8\x45\x08\x86\xfc\x42\x7a\xb3\x8e\xb3\xd4\x9f\x27\xa5\x14\xe6\x49\x9b\xa0\xe1\x39\xa0\x19\xb0\xec\xb4\x83\x84\x8a\x9c\x03\xde\xa2\x86\x48\xd6\xcb\x5a\xe4\x79\x6d\xd8\x79\xaf\xf1\xd0\x82\xbe\x2a\x54\xc0\x66\xd2\x61\x6d\xcc\xd0\xa2\xab\x7b\xc4\x61\x63\x09\x99\xec\x8d\xf7\x88\xe0\x8d\xb8\x25\x35\xd8\x6b\x58\x71\xff\x50\xac\xb8\xff\x47\xac\xc3\xac\x93\x58\x6f\xe9\xfc\x4c\x75\xc2\xe0\x41\x54\xa7\xae\x31\x46\xb5\xf7\x99\x26\xa3\xff\x6b\x89\xcc\x64\x35\x94\xd6\x94\x64\xf9\x70\x37\x5a\x2f\x58\x8f\x96\x2f\xcf\x1f\xab\x27\xf1\x18\xbe\x6d\xd0\x02\x39\x8b\xb4\xf1\xfa\x36\x7f\x5f\xfc\xad\xf5\x4e\x59\xba\x2b\xe2\x51\xa0\x61\xc5\xc7\x64\xf5\x1b\x00\x00\xff\xff\x8e\x14\x6f\x31\xe4\x06\x00\x00")

func testsuiteValueStringJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueStringJson,
		"testsuite/value/string.json",
	)
}

func testsuiteValueStringJson() (*asset, error) {
	bytes, err := testsuiteValueStringJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/string.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueStructJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xb4\x53\xcd\x72\xf2\x30\x0c\xbc\xf3\x14\x1a\x9f\x73\xfb\x6e\xbc\x0a\xc3\x41\xc4\x82\xcf\x33\xc2\xa6\xb2\x4c\xff\x86\x77\xef\xd8\x71\x20\xa1\x69\x49\xa6\xed\x29\x8e\x56\xf2\xae\x56\xf2\x66\x05\xf0\xbe\x02\x00\x30\x96\x62\x2b\xee\xa4\x2e\x78\xb3\x06\x13\x55\x52\xab\xa0\xaf\x27\x02\x4b\x2d\xa3\x60\x81\x9a\x2e\xbb\x83\x93\x90\x59\xd7\x0b\x00\xcc\x11\x9d\x1f\xfc\x03\x98\x5c\x7e\xbb\xad\x16\x17\x64\xef\x88\x6d\x1c\x65\xe7\x68\x08\x39\x74\x2b\x74\x5e\xe9\x40\x62\xe0\xd2\x0c\xf3\x76\x28\xe3\xbc\xa8\xe2\xfc\xc1\x34\x60\x7c\x62\xc6\x1d\xe7\xa8\x4a\xa2\x26\x77\xb6\xc7\xc4\x6a\xd6\x90\x31\xb8\x5c\x2f\xea\x4f\xdd\xb7\x32\x98\x33\xb2\xb3\x7d\x75\x17\x52\x8a\x9a\xb5\x6e\x6a\xc1\xa0\xc3\x3b\xdb\x9c\x6f\x83\x08\x55\xe7\x86\x0d\x5b\x54\xcc\x19\xff\x89\x39\xc0\x73\x10\xb6\x43\xb8\x67\xdd\x23\x47\xea\x75\x35\x0f\xf9\x4a\x47\x67\xe4\x34\xc5\x95\xc1\x9f\x53\x94\x32\xf8\x3c\xc1\x4a\x32\x31\xbf\x7f\x13\xb3\x1a\xf5\x7d\x9b\xc0\x84\xbc\xec\xfb\x7c\x75\x47\x17\xa3\xf3\x07\x08\x25\x82\x3c\x53\xe1\x1f\x28\x10\x7a\x4a\x4e\xc8\x3e\x52\xb0\xd4\x8f\x85\xe3\x2a\x0f\xab\x7b\xb7\x24\x12\x64\x9e\x21\x5f\xac\xe5\x55\xee\xf7\x86\x2d\x94\x48\x2f\x2a\x08\x45\xe8\x2f\x2d\xd4\x1d\xfe\x56\x97\x7f\xbe\xe8\xf2\xdd\xae\xf2\x69\xfb\x11\x00\x00\xff\xff\x54\x14\xc4\x32\x15\x05\x00\x00")

func testsuiteValueStructJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueStructJson,
		"testsuite/value/struct.json",
	)
}

func testsuiteValueStructJson() (*asset, error) {
	bytes, err := testsuiteValueStructJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/struct.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _testsuiteValueUnionJson = []byte("\x1f\x8b\x08\x00\x00\x09\x6e\x88\x00\xff\xcc\x92\xcd\x6a\xc3\x30\x0c\xc7\xef\x79\x0a\xa1\x73\x2e\xbb\xe6\x55\x4a\x0f\x8a\xa3\x14\x83\x67\x17\x59\x2e\x8c\xd1\x77\x1f\x4e\xdc\xd4\xe9\x5a\x4a\x19\xac\x39\x39\x91\xf4\xd7\x4f\x5f\xbb\x06\xe0\xbb\x01\x00\xc0\x81\xa3\x11\x7b\x54\x1b\x3c\x76\x80\xc9\xdb\xe0\x41\xbf\x8e\x0c\x03\x1b\x47\x42\x93\xa7\x9d\x83\xa3\x4a\x32\x9a\x84\xb1\x2b\x7a\x00\xfc\x24\xeb\xab\x7f\x00\xcc\xf2\x25\x59\xd1\x2e\x8e\xb8\x8a\x05\xc0\x31\x84\x6c\xba\xca\xac\x57\x3e\xb0\x20\x9c\xdb\x3a\xae\x27\x59\xc7\x45\x15\xeb\x0f\x08\xe7\x25\xea\xf2\x35\xbf\x45\x8e\x27\x72\x76\xc0\x0e\x54\x12\x17\x93\x72\xd4\x5c\xc8\xae\x08\xaa\xe2\x6f\x06\x32\x86\x30\x8d\xa3\x6e\x63\x20\x25\xec\xe0\xa3\x32\xd5\x8c\x4b\x11\xed\xd3\xe4\x3d\xc9\xa3\xe4\x19\x9c\x3b\xfe\x33\xc3\x7a\x13\x44\xd8\xe8\x23\xd2\x75\x2c\x2b\xca\x48\x2e\xbe\x80\xf1\xc9\x39\x38\x91\x4b\xf7\x10\xd9\xf9\x0c\x31\xbd\xfb\xa6\xc0\xee\x5f\xa7\xf5\x9e\x65\xca\x46\xbd\x63\x30\x8e\x52\xe4\xf7\x1c\x67\x3b\xb7\x9c\xeb\x28\x33\xdc\xc4\xb9\xfe\xcb\x1a\x42\xd2\xad\xac\xe1\xf5\x99\x57\xa8\x9b\x05\x6e\x63\x1b\xbf\x2a\x99\x96\xd1\xec\x7f\x02\x00\x00\xff\xff\xd3\x8e\xfb\xde\xb4\x05\x00\x00")

func testsuiteValueUnionJsonBytes() ([]byte, error) {
	return bindataRead(
		_testsuiteValueUnionJson,
		"testsuite/value/union.json",
	)
}

func testsuiteValueUnionJson() (*asset, error) {
	bytes, err := testsuiteValueUnionJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "testsuite/value/union.json", size: 0, mode: os.FileMode(0), modTime: time.Unix(0, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"testsuite/structure/array.json": testsuiteStructureArrayJson,
	"testsuite/structure/compose.json": testsuiteStructureComposeJson,
	"testsuite/structure/embedded.json": testsuiteStructureEmbeddedJson,
	"testsuite/structure/format.json": testsuiteStructureFormatJson,
	"testsuite/structure/general.json": testsuiteStructureGeneralJson,
	"testsuite/structure/integer.json": testsuiteStructureIntegerJson,
	"testsuite/structure/map.json": testsuiteStructureMapJson,
	"testsuite/structure/set.json": testsuiteStructureSetJson,
	"testsuite/structure/string.json": testsuiteStructureStringJson,
	"testsuite/structure/struct.json": testsuiteStructureStructJson,
	"testsuite/structure/union.json": testsuiteStructureUnionJson,
	"testsuite/value/alias.json": testsuiteValueAliasJson,
	"testsuite/value/array.json": testsuiteValueArrayJson,
	"testsuite/value/boolean.json": testsuiteValueBooleanJson,
	"testsuite/value/format/date-time.json": testsuiteValueFormatDateTimeJson,
	"testsuite/value/format/email.json": testsuiteValueFormatEmailJson,
	"testsuite/value/format/hostname.json": testsuiteValueFormatHostnameJson,
	"testsuite/value/format/ipv4.json": testsuiteValueFormatIpv4Json,
	"testsuite/value/format/ipv6.json": testsuiteValueFormatIpv6Json,
	"testsuite/value/format/uri.json": testsuiteValueFormatUriJson,
	"testsuite/value/integer.json": testsuiteValueIntegerJson,
	"testsuite/value/json.json": testsuiteValueJsonJson,
	"testsuite/value/map.json": testsuiteValueMapJson,
	"testsuite/value/number.json": testsuiteValueNumberJson,
	"testsuite/value/set.json": testsuiteValueSetJson,
	"testsuite/value/string.json": testsuiteValueStringJson,
	"testsuite/value/struct.json": testsuiteValueStructJson,
	"testsuite/value/union.json": testsuiteValueUnionJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"testsuite": &bintree{nil, map[string]*bintree{
		"structure": &bintree{nil, map[string]*bintree{
			"array.json": &bintree{testsuiteStructureArrayJson, map[string]*bintree{}},
			"compose.json": &bintree{testsuiteStructureComposeJson, map[string]*bintree{}},
			"embedded.json": &bintree{testsuiteStructureEmbeddedJson, map[string]*bintree{}},
			"format.json": &bintree{testsuiteStructureFormatJson, map[string]*bintree{}},
			"general.json": &bintree{testsuiteStructureGeneralJson, map[string]*bintree{}},
			"integer.json": &bintree{testsuiteStructureIntegerJson, map[string]*bintree{}},
			"map.json": &bintree{testsuiteStructureMapJson, map[string]*bintree{}},
			"set.json": &bintree{testsuiteStructureSetJson, map[string]*bintree{}},
			"string.json": &bintree{testsuiteStructureStringJson, map[string]*bintree{}},
			"struct.json": &bintree{testsuiteStructureStructJson, map[string]*bintree{}},
			"union.json": &bintree{testsuiteStructureUnionJson, map[string]*bintree{}},
		}},
		"value": &bintree{nil, map[string]*bintree{
			"alias.json": &bintree{testsuiteValueAliasJson, map[string]*bintree{}},
			"array.json": &bintree{testsuiteValueArrayJson, map[string]*bintree{}},
			"boolean.json": &bintree{testsuiteValueBooleanJson, map[string]*bintree{}},
			"format": &bintree{nil, map[string]*bintree{
				"date-time.json": &bintree{testsuiteValueFormatDateTimeJson, map[string]*bintree{}},
				"email.json": &bintree{testsuiteValueFormatEmailJson, map[string]*bintree{}},
				"hostname.json": &bintree{testsuiteValueFormatHostnameJson, map[string]*bintree{}},
				"ipv4.json": &bintree{testsuiteValueFormatIpv4Json, map[string]*bintree{}},
				"ipv6.json": &bintree{testsuiteValueFormatIpv6Json, map[string]*bintree{}},
				"uri.json": &bintree{testsuiteValueFormatUriJson, map[string]*bintree{}},
			}},
			"integer.json": &bintree{testsuiteValueIntegerJson, map[string]*bintree{}},
			"json.json": &bintree{testsuiteValueJsonJson, map[string]*bintree{}},
			"map.json": &bintree{testsuiteValueMapJson, map[string]*bintree{}},
			"number.json": &bintree{testsuiteValueNumberJson, map[string]*bintree{}},
			"set.json": &bintree{testsuiteValueSetJson, map[string]*bintree{}},
			"string.json": &bintree{testsuiteValueStringJson, map[string]*bintree{}},
			"struct.json": &bintree{testsuiteValueStructJson, map[string]*bintree{}},
			"union.json": &bintree{testsuiteValueUnionJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

